apply plugin: 'com.android.application'

android {
    compileSdk 33
    defaultConfig {
        applicationId "com.example.yo7a.healthwatcher"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "BuildID", "\"" + getBuildId() + "\""
        setProperty("archivesBaseName", "rate-$versionName-$versionCode-${getGitHeadRefsSuffix()}-${new Date().format("yyyy-MM-dd-HHmmss")}")
        ndk { abiFilters 'armeabi-v7a', "arm64-v8a" }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    //implementation fileTree(include: ['*.jar'], dir: 'libs')
//    androidTestCompile('androidx.test.espresso:espresso-core:3.1.0', {
//        exclude group: 'com.android.support', module: 'support-annotations'
//    })
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
//    testImplementation 'junit:junit:4.12'
    implementation 'com.google.android.material:material:1.6.1'
    implementation group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'
    //compile files('lib/commons-math3-3.6.1.jar')
}

static def getBuildId() {
    return new Date().format("yyyyMMdd")
}

//提取git commit id
def getGitHeadRefsSuffix() {
    try {
        def root = getRootDir().path
        def headFile = new File("$root/.git/HEAD")
        if (headFile.exists()) {
            String[] strings = headFile.getText('UTF-8').split(" ");
            if (strings.size() > 1) {
                String refFilePath = root + '/.git/' + strings[1]
                def refFile = new File(refFilePath.replace("\n", ""));
                return refFile.getText('UTF-8').substring(0, 8)
            }
        }
    } catch (Exception e) {
        e.printStackTrace()
    }
    return ""
}
